'use strict';

var shared = require('./shared-a3572f8d.js');

const plugin = (options = {}) => {
    const opts = shared.getConfig(options);
    const satisfyPropList = shared.createPropListMatcher(opts.propList);
    const exclude = opts.exclude;
    let isExcludeFile = false;
    let pxReplace;
    return {
        postcssPlugin: shared.postcssPlugin,
        Once(css) {
            const source = css.source;
            const filePath = source.input.file;
            if (exclude &&
                ((typeof exclude === 'function' && exclude(filePath)) ||
                    (typeof exclude === 'string' && filePath.indexOf(exclude) !== -1) ||
                    exclude.exec(filePath) !== null)) {
                isExcludeFile = true;
            }
            else {
                isExcludeFile = false;
            }
            const rootValue = typeof opts.rootValue === 'function'
                ? opts.rootValue(source.input)
                : opts.rootValue;
            pxReplace = shared.createRemReplace(rootValue, opts.unitPrecision, opts.minRemValue, opts.transformUnit);
        },
        Declaration(decl) {
            if (isExcludeFile)
                return;
            if (decl.value.indexOf('rem') === -1 ||
                !satisfyPropList(decl.prop) ||
                // @ts-ignore
                shared.blacklistedSelector(opts.selectorBlackList, decl.parent.selector)) {
                return;
            }
            const value = decl.value.replace(shared.remRegex, pxReplace);
            // if rem unit already exists, do not add or replace
            // @ts-ignore
            if (shared.declarationExists(decl.parent, decl.prop, value))
                return;
            if (opts.replace) {
                decl.value = value;
            }
            else {
                decl.cloneAfter({ value: value });
            }
        },
        AtRule(atRule) {
            if (isExcludeFile)
                return;
            if (opts.mediaQuery && atRule.name === 'media') {
                if (atRule.params.indexOf('rem') === -1)
                    return;
                atRule.params = atRule.params.replace(shared.remRegex, pxReplace);
            }
        }
    };
};
plugin.postcss = true;

module.exports = plugin;
