import type { ChildNode, Container } from 'postcss';
import type { UserDefinedOptions } from './types';
export declare const postcssPlugin = "postcss-rem-to-responsive-pixel";
export declare function getConfig(options: UserDefinedOptions): Omit<UserDefinedOptions, keyof UserDefinedOptions> & Omit<Required<UserDefinedOptions>, keyof UserDefinedOptions> & {
    rootValue: number | ((input: import("postcss").Input) => number);
    unitPrecision: number;
    selectorBlackList: (string | RegExp)[];
    propList: string[];
    replace: boolean;
    mediaQuery: boolean;
    minRemValue: number;
    exclude: string | RegExp | ((filePath: string) => boolean);
    transformUnit: "px" | "rpx";
};
export declare function createRemReplace(rootValue: number, unitPrecision: number, minRemValue: number, transformUnit?: string): (m: string, $1: string) => string;
export declare function toFixed(number: number, precision: number): number;
export declare function declarationExists(decls: Container<ChildNode>, prop: string, value: string): boolean;
export declare function blacklistedSelector(blacklist: (string | RegExp)[], selector?: string): boolean | undefined;
export declare function createPropListMatcher(propList: string[]): (prop: string) => boolean;
